{"version":3,"sources":["../../src/controllers/notes.js"],"names":["notesControllers","getNotes","res","response","count","allNotes","Promise","all","notes","find","status","json","error","console","log","send","createNote","req","request","body","newnotes","note","save","getNotebyId","id","params","findById","_id","then","err","deteleNote","findByIdAndDelete","new"],"mappings":"uXAIaA,gBAAgB,CAAG,CAC5BC,QAAQ,oDAAE,WAA+B,IAAnBC,CAAAA,CAAmB,wDAAbC,iBAAa,CACrC,GAAI,CACA,GAAM,CAAEC,CAAF,CAAWC,CAAX,OAA+BC,CAAAA,OAAO,CAACC,GAAR,CAAY,CAC7CC,kBAAMJ,KAAN,EAD6C,CAE7CI,kBAAMC,IAAN,EAF6C,CAAZ,CAArC,CAIA,MAAOP,CAAAA,CAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,CACxBP,KAAK,CAALA,CADwB,CAExBC,QAAQ,CAARA,CAFwB,CAArB,CAKV,CAAC,MAAOO,CAAP,CAAc,CAEZ,MADAC,CAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,CACA,CAAOV,CAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBK,IAAhB,CAAqB,YAArB,CACV,CACJ,CAfO,+DADoB,CAiB5BC,UAAU,oDAAE,WAA0C,IAApCC,CAAAA,CAAoC,wDAA9BC,gBAA8B,CAAnBhB,CAAmB,wDAAbC,iBAAa,CAC5C,CAAEgB,IAAI,CAAJA,CAAF,EAAYF,CADgC,CAGlD,GAAI,IACMG,CAAAA,CAAQ,CAAG,GAAIZ,kBAAJ,CAAUW,CAAV,CADjB,CAEME,CAAI,MAASD,CAAAA,CAAQ,CAACE,IAAT,EAFnB,CAIA,MAAOpB,CAAAA,CAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,CACxBU,IAAI,CAAJA,CADwB,CAArB,CAIV,CAAC,MAAOT,CAAP,CAAc,CACZC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CACH,CACJ,CAdS,iEAjBkB,CAgC5BW,WAAW,CAAC,sBAAiC,IAAhCN,CAAAA,CAAgC,wDAA3BC,gBAA2B,CAAjBhB,CAAiB,wDAAZC,iBAAY,CACnC,CAAEqB,EAAE,CAAFA,CAAF,EAASP,CAAG,CAACQ,MADsB,CAGzCjB,kBAAMkB,QAAN,CAAe,CAACC,GAAG,CAAEH,CAAN,CAAf,EACKI,IADL,CACUP,CAAI,EACCA,CAAI,CACLnB,CAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,CACnBU,IAAI,CAAJA,CADmB,CAArB,CADK,CAIJnB,CAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBK,IAAhB,CAAqB,aAArB,CANf,WAQYc,CAAD,GACHhB,OAAO,CAACC,GAAR,CAAYe,CAAZ,CADG,CAEI3B,CAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBK,IAAhB,CAAqB,cAArB,CAFJ,CARX,CAYH,CA/C2B,CAgD5Be,UAAU,CAAE,qBAAkC,IAAjCb,CAAAA,CAAiC,wDAA3BC,gBAA2B,CAAjBhB,CAAiB,wDAAZC,iBAAY,CACpC,CAAEqB,EAAE,CAAFA,CAAF,EAASP,CAAG,CAACQ,MADuB,CAG1CjB,kBAAMuB,iBAAN,CAAwB,CAACJ,GAAG,CAAEH,CAAN,CAAxB,CAAkC,CAACQ,GAAG,GAAJ,CAAlC,EACKJ,IADL,CACUP,CAAI,EACCA,CAAI,CACLnB,CAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,CACnBU,IAAI,CAAJA,CADmB,CAArB,CADK,CAIJnB,CAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBK,IAAhB,CAAqB,aAArB,CANf,WAQYc,CAAD,GACHhB,OAAO,CAACC,GAAR,CAAYe,CAAZ,CADG,CAEI3B,CAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBK,IAAhB,CAAqB,cAArB,CAFJ,CARX,CAYH,CA/D2B,C","sourcesContent":["import { request, response } from 'express';\r\nimport notes from '../collectionsMDB/notes';\r\n\r\n\r\nexport const notesControllers = {\r\n    getNotes: async ( _ , res = response) => {\r\n        try {\r\n            const [ count ,  allNotes  ] = await Promise.all([\r\n                notes.count(),\r\n                notes.find()\r\n            ]) ;\r\n            return res.status(200).json({\r\n                count,\r\n                allNotes\r\n            }); \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            return res.status(400).send('Data-Error');\r\n        }\r\n    },\r\n    createNote: async(req = request ,  res = response) => {\r\n        const { body } =  req;\r\n        \r\n        try {     \r\n            const newnotes = new notes(body);\r\n            const note = await newnotes.save();\r\n            \r\n            return res.status(201).json({\r\n                note\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    getNotebyId:(req =request , res =response) =>{\r\n        const { id } = req.params;\r\n       \r\n        notes.findById({_id: id})\r\n            .then(note =>{\r\n                return note \r\n                    ? res.status(200).json({\r\n                        note\r\n                    })\r\n                    :  res.status(401).send('bad-request');          \r\n            })\r\n            .catch((err) =>{\r\n                console.log(err);\r\n                return res.status(500).send('ERROR-SERVER');\r\n            });\r\n    },\r\n    deteleNote: (req = request , res =response) =>{\r\n        const { id } = req.params;\r\n       \r\n        notes.findByIdAndDelete({_id: id},{new: true})\r\n            .then(note =>{\r\n                return note \r\n                    ? res.status(200).json({\r\n                        note\r\n                    })\r\n                    :  res.status(401).send('bad-request');          \r\n            })\r\n            .catch((err) =>{\r\n                console.log(err);\r\n                return res.status(500).send('ERROR-SERVER');\r\n            }); \r\n    }\r\n};"],"file":"notes.js"}